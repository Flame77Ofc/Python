4. Gerador de senhas
11. Cron√¥metro  
12. Timer regressivo  
42. Jogo da forca  
52. Jogo de mem√≥ria (Tkinter)  
54. Pong com Pygame  
55. Snake com Pygame  
58. Flappy Bird com Pygame  
60. Pacman b√°sico com Pygame  
61. Bot do WhatsApp com Selenium  
65. Envio autom√°tico de e-mails  
66. Bot para baixar v√≠deos do YouTube  
69. Leitor de not√≠cias com web scraping  
73. Notificador de anivers√°rios  
79. Web scraper de filmes/livros  
83. Gerenciador de senhas (tipo 1Password)  
85. Jogo de xadrez b√°sico  
92. Chat em tempo real (socket)  
95. Painel de controle de tempo de estudo  
99. Sistema de vota√ß√£o online  
100. App de perguntas estilo "Kahoot"  
1. Gerador de senhas aleat√≥rias  
2. Jogo da velha (simples no terminal)  
17. Cron√¥metro e temporizador  

Caixa Eletr√¥nico üèß: Simule um caixa eletr√¥nico que libera notas de diferentes valores.
Valida√ß√£o de Senha üîê: Verifique se uma senha atende aos requisitos de seguran√ßa (comprimento m√≠nimo, caracteres especiais, etc.).

Cron√¥metro
Timer regressivo
Sistema de login com arquivos
Jogo da forca
Pacman b√°sico com Pygame
Bot do WhatsApp com Selenium
Bot para baixar v√≠deos do YouTube
Leitor de not√≠cias com web scraping
Notificador de anivers√°rios
Bot que toca m√∫sica
Sistema de login e cadastro com SQLite
Jogo de mem√≥ria (encontre os pares)

3. Bloco de notas simples (salvar e ler arquivos .txt)  
8. Gerador de n√∫meros da Mega Sena  
11. Jogo de forca (com palavras lidas de um .txt)  

25. Calend√°rio simples (mostrar m√™s/ano)  
26. Lista de compras (salvar/ler de um arquivo)  

28. Simulador de caixa eletr√¥nico (saque, dep√≥sito, saldo)  

31. Quiz de perguntas e respostas (perguntas de um txt)  

35. Sistema de login e senha (com valida√ß√£o num txt)  

39. Organizador de tarefas por prioridade  

46. Sistema de vota√ß√£o simples (contar votos em txt)  

48. Organizador de senhas (armazenamento seguro em txt)  

65. Simulador de caixa de supermercado (fila, atendente)  
72. Calculadora de tempo entre duas datas (datetime)  


1. Bloco de notas simples (.txt)
2. Jogo pok√©mon simples com cole√ß√µes, cartas e inimigos
43. Jogo de perguntas e respostas (quiz)

45. Simulador de caixa eletr√¥nico
46. Editor de tarefas no terminal

51. Medidor de tempo com `time`

60. Sistema de login simples com `.txt`

65. Gerador de hor√°rios de estudo


89. Jogo de perguntas com tempo limitado

92. Analisador de senhas (for√ßa com base em tamanho)
93. Simulador de vota√ß√£o
94. Simulador de caixa de supermercado
100. Di√°rio com senha de acesso






7. Criptografia Simples: Leia um texto de um arquivo, aplique uma cifra de C√©sar (deslocamento de letras) e salve o resultado em outro .txt.


22. Agenda Simples: Permita agendar eventos com data e hora, salvando em um arquivo .txt.
23. Contador de Dias: Calcule quantos dias faltam para uma data espec√≠fica (ex.: anivers√°rio).
26. Registro de Horas: Registre o hor√°rio de entrada e sa√≠da de um funcion√°rio em um arquivo .txt.
29. Calend√°rio Simples: Gere um calend√°rio de um m√™s espec√≠fico em formato de texto.
30. Contador de Tempo de Tarefa: Me√ßa quanto tempo o usu√°rio leva para completar uma tarefa, salvando o resultado em um .txt.

45. Simulador de Caixa Eletr√¥nico: Permita saques, dep√≥sitos e consulta de saldo, salvando em .txt.

1. Gerenciador de Tarefas - Salva/edita tarefas em `.txt`  
2. Di√°rio Pessoal - Registro di√°rio com timestamps usando `datetime`  
3. Lista de Compras - Adiciona/remove itens de um arquivo  

20. Sistema de Pontua√ß√£o - Calcula rankings a partir de `.txt`  

24. Calend√°rio Mensal - Exibe o m√™s atual com `calendar`  
25. Rastreador de H√°bitos - Registro di√°rio/semanal  
26. Timer de Pomodoro - Notifica a cada 25 minutos  
28. Gerador de Datas Aleat√≥rias  

41. Gerenciador de Senhas - Criptografia b√°sica com `cryptography`  
49. Encurtador de URL - Integra√ß√£o com APIs p√∫blicas  

64. Fabrica de Personagens - Combina atributos/apar√™ncia  
77. Automatizador de E-mails - Envia mensagens via SMTP  


5. Converter camelCase para snake_case.
16. Identificar a palavra mais longa em uma frase
26. Extrair o nome e dom√≠nio de um e-mail.
57. Contar quantas linhas, palavras e caracteres h√° em um arquivo.
77. Criar uma classe ‚ÄúLivro‚Äù com t√≠tulo, autor e m√©todo exibir_info().
78. Fazer uma classe ‚ÄúContaBanc√°ria‚Äù com dep√≥sitos e saques.
79. Criar uma classe ‚ÄúProduto‚Äù com estoque e pre√ßo.
80. Classe ‚ÄúTarefa‚Äù com descri√ß√£o e status.
91. Implementar um sistema





24. Verificar se uma senha √© forte.

41. Criar um gerador de senhas aleat√≥rias.
42. Fazer um cron√¥metro regressivo.
43. Criar um sistema de login simples com verifica√ß√£o de senha.

45. Simular uma roleta com premia√ß√µes aleat√≥rias.

51. Classe `Aluno` com notas e m√©todo para calcular m√©dia.
52. Classe `Carro` com velocidade e m√©todos `acelerar` e `frear`.
53. Classe `Funcionario` com sal√°rio e m√©todo de aumento.
54. Classe `Musica` com t√≠tulo, artista e dura√ß√£o.
55. Classe `Rel√≥gio` com hora, minuto e segundo.
56. Classe `Agenda` com contatos e m√©todos para adicionar/remover.

60. Classe `LivroDigital` com tamanho do arquivo e m√©todo `baixar()`.

61. Sistema de cadastro de usu√°rios (nome, e-mail, idade).
62. Gerenciador de tarefas com status (feito/n√£o feito).

71. Contar quantos n√∫meros de 1 a 1000 s√£o m√∫ltiplos de 3 e 5.
72. Mostrar a tabuada de um n√∫mero.
73. Mostrar os primeiros N n√∫meros primos.
74. Criar uma calculadora de MDC (m√°ximo divisor comum).
75. Mostrar a sequ√™ncia de Collatz de um n√∫mero.
76. Simular o crescimento de uma popula√ß√£o com taxa anual.
77. Contar quantas palavras come√ßam com vogal em uma frase.
78. Simular o lan√ßamento de duas moedas at√© obter 5 caras seguidas.
79. Calcular o tempo de download dado o tamanho e velocidade.
80. Verificar se uma lista forma uma progress√£o aritm√©tica.


81. Simulador de quiz com pontua√ß√£o.
82. Conversor de moedas com dados fict√≠cios.
83. Cadastro de clientes com ID autom√°tico.
84. Editor de texto b√°sico em terminal.
85. Simulador de dados de RPG com m√∫ltiplos dados.
86. Controle de s√©ries assistidas com status e avalia√ß√£o.
87. Leitor de arquivos CSV com extra√ß√£o de colunas.
88. Gerador de relat√≥rios de vendas (dados fict√≠cios).
89. Sistema de sorteio com entrada de nomes.
90. Simulador de batalha entre personagens com atributos.


91. Criar uma fun√ß√£o que detecta a linguagem de uma frase (heur√≠stica simples).
92. Simular um quiz de m√∫ltipla escolha com resposta certa.
93. Compactar texto eliminando letras repetidas (ex: ‚Äúaaabb‚Äù ‚Üí ‚Äúa3b2‚Äù).
94. Contador de palavras √∫nicas em uma lista.
95. Simular um dado com pesos personalizados.
96. Criar uma linha de progresso animada (em texto).
97. Criar um sistema de mensagens entre usu√°rios simulados.
98. Conversor de cores RGB ‚Üî Hex.
99. Sistema de perguntas e respostas com dificuldade crescente.
100. Criar um gerador de nomes aleat√≥rios com prefixo e sufixo.


21. Ler um arquivo CSV e imprimir os dados em formato tabela.  
22. Contar quantas vezes uma palavra aparece em um arquivo texto.  
23. Criar um programa que copia o conte√∫do de um arquivo para outro.  
24. Ler um arquivo e substituir uma palavra por outra.  
25. Escrever uma lista de nomes em um arquivo texto.  
26. Ler um arquivo e contar quantas linhas est√£o vazias.  
27. Criar um programa que concatena o conte√∫do de v√°rios arquivos texto.  
28. Ler um arquivo e imprimir as 10 primeiras linhas.  
29. Criar um programa que remove linhas duplicadas de um arquivo.  
30. Salvar dados de um dicion√°rio em arquivo JSON.


31. Criar uma classe ‚ÄúAluno‚Äù com nome, idade e m√©todo para exibir dados.  
32. Criar uma classe ‚ÄúCarro‚Äù com atributos marca, modelo e m√©todo acelerar.  
33. Criar uma classe ‚ÄúContaCorrente‚Äù com limite e saldo, e m√©todos para saque e dep√≥sito.  
34. Criar uma classe ‚ÄúFuncionario‚Äù com nome, sal√°rio e m√©todo para aumento salarial.  
35. Criar uma classe ‚ÄúC√≠rculo‚Äù com atributo raio e m√©todo para calcular √°rea.  
36. Criar uma classe ‚ÄúAgenda‚Äù que armazena contatos (nome e telefone).  
37. Criar uma classe ‚ÄúPedido‚Äù com itens e m√©todo para calcular total.  
38. Criar uma classe ‚ÄúElevador‚Äù que controla andar atual e capacidade.  
39. Criar uma classe ‚ÄúPessoa‚Äù com m√©todo para calcular IMC.  
40. Criar uma classe ‚ÄúTarefa‚Äù com descri√ß√£o, status e m√©todo para marcar como conclu√≠da.

## Projetos Pequenos

41. Criar um conversor de temperaturas (Celsius para Fahrenheit e vice-versa).  
42. Criar um jogo de adivinha√ß√£o de n√∫meros.  
43. Criar um sistema simples de cadastro de usu√°rios em arquivo.  
44. Criar um gerenciador de tarefas com salvar e carregar do arquivo.  
45. Criar um programa que gera um relat√≥rio de vendas a partir de dados em arquivo.  
46. Criar um sistema de autentica√ß√£o simples com usu√°rio e senha.  
47. Criar um programa que calcula o fatorial de um n√∫mero.  
48. Criar um programa que imprime a sequ√™ncia de Fibonacci at√© N termos.  
49. Criar um programa que verifica se um n√∫mero √© primo.  
50. Criar um programa que calcula a m√©dia de uma lista de n√∫meros.



61. Criar uma classe ‚ÄúLivro‚Äù com t√≠tulo, autor e m√©todo exibir_info() (variante do exemplo 77).  
62. Criar uma classe ‚ÄúContaBanc√°ria‚Äù com dep√≥sitos e saques (variante do exemplo 78).  
63. Criar uma classe ‚ÄúProduto‚Äù com estoque e pre√ßo (variante do exemplo 79).  
64. Criar uma classe ‚ÄúTarefa‚Äù com descri√ß√£o e status (variante do exemplo 80).  
65. Criar uma classe ‚ÄúBiblioteca‚Äù que gerencia uma lista de livros.  
66. Criar uma classe ‚ÄúCliente‚Äù com nome, email e m√©todo para validar email.  
67. Criar uma classe ‚ÄúPedido‚Äù que armazena produtos e calcula valor total.  
68. Criar uma classe ‚ÄúEstudante‚Äù que armazena notas e calcula m√©dia final.  
69. Criar uma classe ‚ÄúVe√≠culo‚Äù com subclasses ‚ÄúCarro‚Äù e ‚ÄúMoto‚Äù.  
70. Criar uma classe ‚ÄúFuncionario‚Äù que calcula sal√°rio com base em horas extras.

81. Criar um sistema simples de cadastro de livros com busca por t√≠tulo.  
82. Criar um sistema banc√°rio com m√∫ltiplas contas e hist√≥rico de transa√ß√µes.  
86. Criar um chatbot simples que responde perguntas b√°sicas.  
90. Criar um programa que simula uma agenda de compromissos com salvar arquivos.
92. Criar um programa que realiza scraping de dados de uma p√°gina web.  
93. Criar um programa que envia e-mails autom√°ticos com anexos.  
94. 


28. Ler um arquivo e imprimir as 10 primeiras linhas.  
29. Criar um programa que remove linhas duplicadas de um arquivo.  
30. Salvar dados de um dicion√°rio em arquivo JSON.

31. Criar uma classe ‚ÄúAluno‚Äù com nome, idade e m√©todo para exibir dados.  
32. Criar uma classe ‚ÄúCarro‚Äù com atributos marca, modelo e m√©todo acelerar.  
33. Criar uma classe ‚ÄúContaCorrente‚Äù com limite e saldo, e m√©todos para saque e dep√≥sito.  
34. Criar uma classe ‚ÄúFuncionario‚Äù com nome, sal√°rio e m√©todo para aumento salarial.  
35. Criar uma classe ‚ÄúC√≠rculo‚Äù com atributo raio e m√©todo para calcular √°rea.  
36. Criar uma classe ‚ÄúAgenda‚Äù que armazena contatos (nome e telefone).  
37. Criar uma classe ‚ÄúPedido‚Äù com itens e m√©todo para calcular total.  
38. Criar uma classe ‚ÄúElevador‚Äù que controla andar atual e capacidade.  
39. Criar uma classe ‚ÄúPessoa‚Äù com m√©todo para calcular IMC.  
40. Criar uma classe ‚ÄúTarefa‚Äù com descri√ß√£o, status e m√©todo para marcar como conclu√≠da.


45. Criar um programa que gera um relat√≥rio de vendas a partir de dados em arquivo.  


51. Implementar uma fun√ß√£o que converte n√∫meros romanos para inteiros.  
52. Criar uma fun√ß√£o que gera um resumo de texto (primeiras N palavras).  
53. Criar um programa que conta o n√∫mero de ocorr√™ncias de cada letra em um texto.  
54. Criar uma fun√ß√£o que inverte as palavras de uma frase mantendo a ordem das letras.  
55. Criar um programa que verifica se duas strings s√£o anagramas.  
56. Criar um programa que remove palavras duplicadas de uma frase.  
57. Contar quantas linhas, palavras e caracteres h√° em um arquivo (variante do exemplo 57).  
58. Criar um validador de CPF ou CNPJ.  
59. Criar um programa que extrai hashtags de um texto.  
60. Criar um programa que converte um texto para c√≥digo Morse.


61. Criar uma classe ‚ÄúLivro‚Äù com t√≠tulo, autor e m√©todo exibir_info() (variante do exemplo 77).  
62. Criar uma classe ‚ÄúContaBanc√°ria‚Äù com dep√≥sitos e saques (variante do exemplo 78).  
63. Criar uma classe ‚ÄúProduto‚Äù com estoque e pre√ßo (variante do exemplo 79).  
64. Criar uma classe ‚ÄúTarefa‚Äù com descri√ß√£o e status (variante do exemplo 80).  
65. Criar uma classe ‚ÄúBiblioteca‚Äù que gerencia uma lista de livros.  
66. Criar uma classe ‚ÄúCliente‚Äù com nome, email e m√©todo para validar email.  
67. Criar uma classe ‚ÄúPedido‚Äù que armazena produtos e calcula valor total.  
68. Criar uma classe ‚ÄúEstudante‚Äù que armazena notas e calcula m√©dia final.  
69. Criar uma classe ‚ÄúVe√≠culo‚Äù com subclasses ‚ÄúCarro‚Äù e ‚ÄúMoto‚Äù.  
70. Criar uma classe ‚ÄúFuncionario‚Äù que calcula sal√°rio com base em horas extras.


81. Criar um sistema simples de cadastro de livros com busca por t√≠tulo.  
82. Criar um sistema banc√°rio com m√∫ltiplas contas e hist√≥rico de transa√ß√µes.  
83. Criar um gerenciador de estoque com entrada e sa√≠da de produtos.  
84. Criar um programa que gera relat√≥rios de vendas mensais a partir de arquivos CSV.  
85. Criar um programa que l√™ e processa dados JSON para gerar estat√≠sticas.  
86. Criar um chatbot simples que responde perguntas b√°sicas.  
87. Criar um sistema de vota√ß√£o com registro de votos e apura√ß√£o.  
88. Criar um programa que gera gr√°ficos simples usando matplotlib (se permitido).  
89. Criar um programa que l√™ um arquivo de log e extrai erros.  
90. Criar um programa que simula uma agenda de compromissos com salvar em arquivo.


91. Implementar um sistema de autentica√ß√£o com criptografia de senhas.  
92. Criar um programa que realiza scraping de dados de uma p√°gina web.  
93. Criar um programa que envia e-mails autom√°ticos com anexos.  
94. Criar um programa que implementa um jogo simples (ex: pedra-papel-tesoura).  
95. Criar um programa que converte arquivos entre formatos (ex: CSV para JSON).  
96. Criar um programa que interpreta comandos de voz (usando bibliotecas externas).  
97. Criar um programa que gera PDFs a partir de dados de entrada.  
98. Criar um programa que realiza backup autom√°tico de arquivos.  
99. Criar um programa que monitora altera√ß√µes em uma pasta e registra logs.  
100. Criar um sistema b√°sico de gerenciamento de usu√°rios com permiss√µes.


19. Implementar um sistema simples de login e senha.
20. Simular o lan√ßamento de dois dados e contar quantas vezes a soma √© 7.
21. Criar um programa que desenhe um tri√¢ngulo de Pascal.
22. Implementar um rel√≥gio digital na linha de comando.
23. Ordenar uma lista de tuplas pelo segundo elemento.
24. Contar quantos n√∫meros pares e √≠mpares h√° em uma lista.
25. Simular um jogo de pedra, papel e tesoura.
26. Calcular o MDC (m√°ximo divisor comum) entre dois n√∫meros.
27. Validar se uma string √© um n√∫mero bin√°rio.
28. Converter uma lista de Celsius para Fahrenheit.
29. Criar uma agenda telef√¥nica simples com dicion√°rios.
30. Implementar uma busca bin√°ria em uma lista ordenada.
31. Simular um caixa eletr√¥nico com saques m√∫ltiplos de 10, 20, 50 e 100.
32. Ler um arquivo de texto e retornar as 10 palavras mais frequentes.
33. Criar uma fun√ß√£o que retorne os divisores de um n√∫mero.
34. Implementar um sistema de cadastro de usu√°rios com persist√™ncia em arquivo.
35. Calcular a dist√¢ncia entre dois pontos no plano cartesiano.
36. Gerar todas as permuta√ß√µes de uma lista.
37. Criar uma fun√ß√£o que verifique se uma matriz √© sim√©trica.
38. Implementar um sistema de vota√ß√£o simples.
39. Criar uma classe ‚ÄúAluno‚Äù com m√©todos para calcular m√©dia e situa√ß√£o.
40. Classe ‚ÄúFuncionario‚Äù com atributos de nome, sal√°rio e m√©todo para reajuste.
41. Classe ‚ÄúCarro‚Äù com m√©todos de ligar, desligar e acelerar.
42. Classe ‚ÄúCinema‚Äù para gerenciar reservas de assentos.
43. Classe ‚ÄúPlaylist‚Äù de m√∫sicas com m√©todos de adicionar e remover faixas.
44. Classe ‚ÄúPedido‚Äù para simular compras em uma loja virtual.
45. Classe ‚ÄúNotaFiscal‚Äù que calcula o valor total dos produtos.
46. Classe ‚ÄúPessoa‚Äù com m√©todo de anivers√°rio para aumentar idade.
47. Classe ‚ÄúEvento‚Äù que armazena data, local e participantes.
48. Classe ‚ÄúContato‚Äù para uma agenda, com nome, telefone e e-mail.
49. Classe ‚ÄúJogoDaVelha‚Äù para dois jogadores.
50. Implementar fila e pilha usando listas.
51. Converter uma lista de inteiros para uma string separada por v√≠rgulas.
52. Criar um script para baixar imagens de URLs lidas de um arquivo.
53. Implementar uma fun√ß√£o para calcular a soma dos n√∫meros de uma matriz.
54. Encontrar o elemento mais comum em uma lista.
55. Calcular o fatorial de um n√∫mero usando recurs√£o.
56. Implementar um sistema de cadastro de livros com busca por autor.
57. Calcular a mediana de uma lista de n√∫meros.
58. Validar se uma senha atende crit√©rios de seguran√ßa.
59. Gerar um gr√°fico de barras com dados lidos de um arquivo.
60. Implementar um conversor de moedas com taxas atualizadas.
61. Criar um sistema de reservas de hotel.
62. Implementar um programa que simula uma fila de supermercado.
63. Criar uma agenda de compromissos com datas e hor√°rios.
66. Implementar um sistema de invent√°rio para uma loja.

82. Implementar um sistema de login com tentativa limitada.

87. Calcular a diferen√ßa entre duas datas.

99. **Jogo de mem√≥ria.** Implemente um jogo onde o jogador deve encontrar pares em uma lista embaralhada.
100. **Sistema de controle de estoque.** Crie um programa que gerencia um estoque com produtos, quantidades e pre√ßos, permitindo adicionar, remover e consultar.

Classe Carro com atributos (marca, modelo) e m√©todo acelerar().

Classe Contato (nome, telefone, e-mail) para uma agenda.
Classe Aluno (matr√≠cula, notas) com m√©todo para calcular m√©dia.
Classe Rel√≥gio que simula um cron√¥metro (horas, minutos, segundos).
To-do list via linha de comando (adicionar, remover, listar tarefas).

Web scrapping para extrair t√≠tulos de not√≠cias de um site.