5. Converter camelCase para snake_case.
16. Identificar a palavra mais longa em uma frase
26. Extrair o nome e domínio de um e-mail.
57. Contar quantas linhas, palavras e caracteres há em um arquivo.
77. Criar uma classe “Livro” com título, autor e método exibir_info().
78. Fazer uma classe “ContaBancária” com depósitos e saques.
79. Criar uma classe “Produto” com estoque e preço.
80. Classe “Tarefa” com descrição e status.
91. Implementar um sistema
24. Verificar se uma senha é forte.
41. Criar um gerador de senhas aleatórias.
42. Fazer um cronômetro regressivo.
43. Criar um sistema de login simples com verificação de senha.

45. Simular uma roleta com premiações aleatórias.

52. Classe `Carro` com velocidade e métodos `acelerar` e `frear`.
53. Classe `Funcionario` com salário e método de aumento.
54. Classe `Musica` com título, artista e duração.
55. Classe `Relógio` com hora, minuto e segundo.
56. Classe `Agenda` com contatos e métodos para adicionar/remover.

60. Classe `LivroDigital` com tamanho do arquivo e método `baixar()`.

61. Sistema de cadastro de usuários (nome, e-mail, idade).
62. Gerenciador de tarefas com status (feito/não feito).

71. Contar quantos números de 1 a 1000 são múltiplos de 3 e 5.
72. Mostrar a tabuada de um número.
73. Mostrar os primeiros N números primos.
74. Criar uma calculadora de MDC (máximo divisor comum).
75. Mostrar a sequência de Collatz de um número.
76. Simular o crescimento de uma população com taxa anual.
77. Contar quantas palavras começam com vogal em uma frase.
78. Simular o lançamento de duas moedas até obter 5 caras seguidas.
79. Calcular o tempo de download dado o tamanho e velocidade.
80. Verificar se uma lista forma uma progressão aritmética.


81. Simulador de quiz com pontuação.
82. Conversor de moedas com dados fictícios.
83. Cadastro de clientes com ID automático.
84. Editor de texto básico em terminal.
85. Simulador de dados de RPG com múltiplos dados.
86. Controle de séries assistidas com status e avaliação.
87. Leitor de arquivos CSV com extração de colunas.
88. Gerador de relatórios de vendas (dados fictícios).
89. Sistema de sorteio com entrada de nomes.
90. Simulador de batalha entre personagens com atributos.


91. Criar uma função que detecta a linguagem de uma frase (heurística simples).
92. Simular um quiz de múltipla escolha com resposta certa.
93. Compactar texto eliminando letras repetidas (ex: “aaabb” → “a3b2”).
94. Contador de palavras únicas em uma lista.
95. Simular um dado com pesos personalizados.
96. Criar uma linha de progresso animada (em texto).
97. Criar um sistema de mensagens entre usuários simulados.
98. Conversor de cores RGB ↔ Hex.
99. Sistema de perguntas e respostas com dificuldade crescente.
100. Criar um gerador de nomes aleatórios com prefixo e sufixo.


21. Ler um arquivo CSV e imprimir os dados em formato tabela.  
22. Contar quantas vezes uma palavra aparece em um arquivo texto.  
23. Criar um programa que copia o conteúdo de um arquivo para outro.  
24. Ler um arquivo e substituir uma palavra por outra.  
25. Escrever uma lista de nomes em um arquivo texto.  
26. Ler um arquivo e contar quantas linhas estão vazias.  
27. Criar um programa que concatena o conteúdo de vários arquivos texto.  
28. Ler um arquivo e imprimir as 10 primeiras linhas.  
29. Criar um programa que remove linhas duplicadas de um arquivo.  
30. Salvar dados de um dicionário em arquivo JSON.


31. Criar uma classe “Aluno” com nome, idade e método para exibir dados.  
32. Criar uma classe “Carro” com atributos marca, modelo e método acelerar.  
33. Criar uma classe “ContaCorrente” com limite e saldo, e métodos para saque e depósito.  
34. Criar uma classe “Funcionario” com nome, salário e método para aumento salarial.  
35. Criar uma classe “Círculo” com atributo raio e método para calcular área.  
36. Criar uma classe “Agenda” que armazena contatos (nome e telefone).  
37. Criar uma classe “Pedido” com itens e método para calcular total.  
38. Criar uma classe “Elevador” que controla andar atual e capacidade.  
39. Criar uma classe “Pessoa” com método para calcular IMC.  
40. Criar uma classe “Tarefa” com descrição, status e método para marcar como concluída.

## Projetos Pequenos

41. Criar um conversor de temperaturas (Celsius para Fahrenheit e vice-versa).  
42. Criar um jogo de adivinhação de números.  
43. Criar um sistema simples de cadastro de usuários em arquivo.  
44. Criar um gerenciador de tarefas com salvar e carregar do arquivo.  
45. Criar um programa que gera um relatório de vendas a partir de dados em arquivo.  
46. Criar um sistema de autenticação simples com usuário e senha.  
47. Criar um programa que calcula o fatorial de um número.  
48. Criar um programa que imprime a sequência de Fibonacci até N termos.  
49. Criar um programa que verifica se um número é primo.  
50. Criar um programa que calcula a média de uma lista de números.



61. Criar uma classe “Livro” com título, autor e método exibir_info() (variante do exemplo 77).  
62. Criar uma classe “ContaBancária” com depósitos e saques (variante do exemplo 78).  
63. Criar uma classe “Produto” com estoque e preço (variante do exemplo 79).  
64. Criar uma classe “Tarefa” com descrição e status (variante do exemplo 80).  
65. Criar uma classe “Biblioteca” que gerencia uma lista de livros.  
66. Criar uma classe “Cliente” com nome, email e método para validar email.  
67. Criar uma classe “Pedido” que armazena produtos e calcula valor total.  
68. Criar uma classe “Estudante” que armazena notas e calcula média final.  
69. Criar uma classe “Veículo” com subclasses “Carro” e “Moto”.  
70. Criar uma classe “Funcionario” que calcula salário com base em horas extras.

81. Criar um sistema simples de cadastro de livros com busca por título.  
82. Criar um sistema bancário com múltiplas contas e histórico de transações.  
83. Criar um gerenciador de estoque com entrada e saída de produtos.  
84. Criar um programa que gera relatórios de vendas mensais a partir de arquivos CSV.  
85. Criar um programa que lê e processa dados JSON para gerar estatísticas.  
86. Criar um chatbot simples que responde perguntas básicas.  
87. Criar um sistema de votação com registro de votos e apuração.  
88. Criar um programa que gera gráficos simples usando matplotlib (se permitido).  
89. Criar um programa que lê um arquivo de log e extrai erros.  
90. Criar um programa que simula uma agenda de compromissos com salvar em arquivo.


91. Implementar um sistema de autenticação com criptografia de senhas.  
92. Criar um programa que realiza scraping de dados de uma página web.  
93. Criar um programa que envia e-mails automáticos com anexos.  
94. Criar um programa que implementa um jogo simples (ex: pedra-papel-tesoura).  
95. Criar um programa que converte arquivos entre formatos (ex: CSV para JSON).  
96. Criar um programa que interpreta comandos de voz (usando bibliotecas externas).  
97. Criar um programa que gera PDFs a partir de dados de entrada.  
98. Criar um programa que realiza backup automático de arquivos.  
99. Criar um programa que monitora alterações em uma pasta e registra logs.  
100. Criar um sistema básico de gerenciamento de usuários com permissões.




21. Ler um arquivo CSV e imprimir os dados em formato tabela.  
22. Contar quantas vezes uma palavra aparece em um arquivo texto.  
23. Criar um programa que copia o conteúdo de um arquivo para outro.  
24. Ler um arquivo e substituir uma palavra por outra.  
25. Escrever uma lista de nomes em um arquivo texto.  
26. Ler um arquivo e contar quantas linhas estão vazias.  
27. Criar um programa que concatena o conteúdo de vários arquivos texto.  
28. Ler um arquivo e imprimir as 10 primeiras linhas.  
29. Criar um programa que remove linhas duplicadas de um arquivo.  
30. Salvar dados de um dicionário em arquivo JSON.

31. Criar uma classe “Aluno” com nome, idade e método para exibir dados.  
32. Criar uma classe “Carro” com atributos marca, modelo e método acelerar.  
33. Criar uma classe “ContaCorrente” com limite e saldo, e métodos para saque e depósito.  
34. Criar uma classe “Funcionario” com nome, salário e método para aumento salarial.  
35. Criar uma classe “Círculo” com atributo raio e método para calcular área.  
36. Criar uma classe “Agenda” que armazena contatos (nome e telefone).  
37. Criar uma classe “Pedido” com itens e método para calcular total.  
38. Criar uma classe “Elevador” que controla andar atual e capacidade.  
39. Criar uma classe “Pessoa” com método para calcular IMC.  
40. Criar uma classe “Tarefa” com descrição, status e método para marcar como concluída.


45. Criar um programa que gera um relatório de vendas a partir de dados em arquivo.  


51. Implementar uma função que converte números romanos para inteiros.  
52. Criar uma função que gera um resumo de texto (primeiras N palavras).  
53. Criar um programa que conta o número de ocorrências de cada letra em um texto.  
54. Criar uma função que inverte as palavras de uma frase mantendo a ordem das letras.  
55. Criar um programa que verifica se duas strings são anagramas.  
56. Criar um programa que remove palavras duplicadas de uma frase.  
57. Contar quantas linhas, palavras e caracteres há em um arquivo (variante do exemplo 57).  
58. Criar um validador de CPF ou CNPJ.  
59. Criar um programa que extrai hashtags de um texto.  
60. Criar um programa que converte um texto para código Morse.


61. Criar uma classe “Livro” com título, autor e método exibir_info() (variante do exemplo 77).  
62. Criar uma classe “ContaBancária” com depósitos e saques (variante do exemplo 78).  
63. Criar uma classe “Produto” com estoque e preço (variante do exemplo 79).  
64. Criar uma classe “Tarefa” com descrição e status (variante do exemplo 80).  
65. Criar uma classe “Biblioteca” que gerencia uma lista de livros.  
66. Criar uma classe “Cliente” com nome, email e método para validar email.  
67. Criar uma classe “Pedido” que armazena produtos e calcula valor total.  
68. Criar uma classe “Estudante” que armazena notas e calcula média final.  
69. Criar uma classe “Veículo” com subclasses “Carro” e “Moto”.  
70. Criar uma classe “Funcionario” que calcula salário com base em horas extras.
82. Criar um sistema bancário com múltiplas contas e histórico de transações.  
90. Criar um programa que simula uma agenda de compromissos com salvar em arquivo.
91. Implementar um sistema de autenticação com criptografia de senhas.  
92. Criar um programa que realiza scraping de dados de uma página web.  
93. Criar um programa que envia e-mails automáticos com anexos.  
19. Implementar um sistema simples de login e senha.
31. Simular um caixa eletrônico com saques múltiplos de 10, 20, 50 e 100.
38. Implementar um sistema de votação simples.
39. Criar uma classe “Aluno” com métodos para calcular média e situação.
40. Classe “Funcionario” com atributos de nome, salário e método para reajuste.
41. Classe “Carro” com métodos de ligar, desligar e acelerar.
62. Implementar um programa que simula uma fila de supermercado.
66. Implementar um sistema de inventário para uma loja.
82. Implementar um sistema de login com tentativa limitada.
87. Calcular a diferença entre duas datas.
99. **Jogo de memória.** Implemente um jogo onde o jogador deve encontrar pares em uma lista embaralhada.
100. **Sistema de controle de estoque.** Crie um programa que gerencia um estoque com produtos, quantidades e preços, permitindo adicionar, remover e consultar.
Classe Carro com atributos (marca, modelo) e método acelerar().
Classe Contato (nome, telefone, e-mail) para uma agenda.
Classe Aluno (matrícula, notas) com método para calcular média.
Classe Relógio que simula um cronômetro (horas, minutos, segundos).
To-do list via linha de comando (adicionar, remover, listar tarefas).
Web scrapping para extrair títulos de notícias de um site.
8. Relógio digital
9. Timer regressivo
11. Aplicativo de lista de compras
13. Encurtador de URL