52. Jogo de memória (Tkinter)  
54. Pong com Pygame  
55. Snake com Pygame  
58. Flappy Bird com Pygame  
60. Pacman básico com Pygame  
61. Bot do WhatsApp com Selenium  
65. Envio automático de e-mails  
66. Bot para baixar vídeos do YouTube  
69. Leitor de notícias com web scraping  
73. Notificador de aniversários  
79. Web scraper de filmes/livros  
83. Gerenciador de senhas (tipo 1Password)  
85. Jogo de xadrez básico  
92. Chat em tempo real (socket)  
95. Painel de controle de tempo de estudo  
99. Sistema de votação online  
100. App de perguntas estilo "Kahoot"  
Pacman básico com Pygame
Bot do WhatsApp com Selenium
Bot para baixar vídeos do YouTube
Leitor de notícias com web scraping
Notificador de aniversários
Bot que toca música
26. Lista de compras (salvar/ler de um arquivo)  

65. Simulador de caixa de supermercado (fila, atendente)  

89. Jogo de perguntas com tempo limitado

94. Simulador de caixa de supermercado
7. Criptografia Simples: Leia um texto de um arquivo, aplique uma cifra de César (deslocamento de letras) e salve o resultado em outro .txt.


22. Agenda Simples: Permita agendar eventos com data e hora, salvando em um arquivo .txt.
23. Contador de Dias: Calcule quantos dias faltam para uma data específica (ex.: aniversário).
26. Registro de Horas: Registre o horário de entrada e saída de um funcionário em um arquivo .txt.
29. Calendário Simples: Gere um calendário de um mês específico em formato de texto.
30. Contador de Tempo de Tarefa: Meça quanto tempo o usuário leva para completar uma tarefa, salvando o resultado em um .txt.


20. Sistema de Pontuação - Calcula rankings a partir de `.txt`  

24. Calendário Mensal - Exibe o mês atual com `calendar`  
25. Rastreador de Hábitos - Registro diário/semanal  
26. Timer de Pomodoro - Notifica a cada 25 minutos  
28. Gerador de Datas Aleatórias  

49. Encurtador de URL - Integração com APIs públicas  

64. Fabrica de Personagens - Combina atributos/aparência  
77. Automatizador de E-mails - Envia mensagens via SMTP  


5. Converter camelCase para snake_case.
16. Identificar a palavra mais longa em uma frase
26. Extrair o nome e domínio de um e-mail.
57. Contar quantas linhas, palavras e caracteres há em um arquivo.
77. Criar uma classe “Livro” com título, autor e método exibir_info().
78. Fazer uma classe “ContaBancária” com depósitos e saques.
79. Criar uma classe “Produto” com estoque e preço.
80. Classe “Tarefa” com descrição e status.
51. Classe `Aluno` com notas e método para calcular média.
52. Classe `Carro` com velocidade e métodos `acelerar` e `frear`.
53. Classe `Funcionario` com salário e método de aumento.
54. Classe `Musica` com título, artista e duração.
55. Classe `Relógio` com hora, minuto e segundo.
56. Classe `Agenda` com contatos e métodos para adicionar/remover.

60. Classe `LivroDigital` com tamanho do arquivo e método `baixar()`.

61. Sistema de cadastro de usuários (nome, e-mail, idade).
62. Gerenciador de tarefas com status (feito/não feito).

71. Contar quantos números de 1 a 1000 são múltiplos de 3 e 5.
72. Mostrar a tabuada de um número.
73. Mostrar os primeiros N números primos.
74. Criar uma calculadora de MDC (máximo divisor comum).
75. Mostrar a sequência de Collatz de um número.
76. Simular o crescimento de uma população com taxa anual.
77. Contar quantas palavras começam com vogal em uma frase.
78. Simular o lançamento de duas moedas até obter 5 caras seguidas.
79. Calcular o tempo de download dado o tamanho e velocidade.
80. Verificar se uma lista forma uma progressão aritmética.


81. Simulador de quiz com pontuação.
82. Conversor de moedas com dados fictícios.
84. Editor de texto básico em terminal.
85. Simulador de dados de RPG com múltiplos dados.
86. Controle de séries assistidas com status e avaliação.
90. Simulador de batalha entre personagens com atributos.


21. Ler um arquivo CSV e imprimir os dados em formato tabela.  
22. Contar quantas vezes uma palavra aparece em um arquivo texto.  
23. Criar um programa que copia o conteúdo de um arquivo para outro.  
24. Ler um arquivo e substituir uma palavra por outra.  
25. Escrever uma lista de nomes em um arquivo texto.  
26. Ler um arquivo e contar quantas linhas estão vazias.  
27. Criar um programa que concatena o conteúdo de vários arquivos texto.  
28. Ler um arquivo e imprimir as 10 primeiras linhas.  
29. Criar um programa que remove linhas duplicadas de um arquivo.  
30. Salvar dados de um dicionário em arquivo JSON.


31. Criar uma classe “Aluno” com nome, idade e método para exibir dados.  
32. Criar uma classe “Carro” com atributos marca, modelo e método acelerar.  
33. Criar uma classe “ContaCorrente” com limite e saldo, e métodos para saque e depósito.  
34. Criar uma classe “Funcionario” com nome, salário e método para aumento salarial.  
35. Criar uma classe “Círculo” com atributo raio e método para calcular área.  
36. Criar uma classe “Agenda” que armazena contatos (nome e telefone).  
37. Criar uma classe “Pedido” com itens e método para calcular total.  
38. Criar uma classe “Elevador” que controla andar atual e capacidade.  
39. Criar uma classe “Pessoa” com método para calcular IMC.  
40. Criar uma classe “Tarefa” com descrição, status e método para marcar como concluída.

44. Criar um gerenciador de tarefas com salvar e carregar do arquivo.  



61. Criar uma classe “Livro” com título, autor e método exibir_info() (variante do exemplo 77).  
62. Criar uma classe “ContaBancária” com depósitos e saques (variante do exemplo 78).  
63. Criar uma classe “Produto” com estoque e preço (variante do exemplo 79).  
64. Criar uma classe “Tarefa” com descrição e status (variante do exemplo 80).  
65. Criar uma classe “Biblioteca” que gerencia uma lista de livros.  
66. Criar uma classe “Cliente” com nome, email e método para validar email.  
67. Criar uma classe “Pedido” que armazena produtos e calcula valor total.  
81. Criar um sistema simples de cadastro de livros com busca por título.  
82. Criar um sistema bancário com múltiplas contas e histórico de transações.  
86. Criar um chatbot simples que responde perguntas básicas.  
90. Criar um programa que simula uma agenda de compromissos com salvar arquivos.
92. Criar um programa que realiza scraping de dados de uma página web.  
93. Criar um programa que envia e-mails automáticos com anexos.  



31. Criar uma classe “Aluno” com nome, idade e método para exibir dados.  
32. Criar uma classe “Carro” com atributos marca, modelo e método acelerar.  
33. Criar uma classe “ContaCorrente” com limite e saldo, e métodos para saque e depósito.  
34. Criar uma classe “Funcionario” com nome, salário e método para aumento salarial.  
35. Criar uma classe “Círculo” com atributo raio e método para calcular área.  
36. Criar uma classe “Agenda” que armazena contatos (nome e telefone).  
37. Criar uma classe “Pedido” com itens e método para calcular total.  
38. Criar uma classe “Elevador” que controla andar atual e capacidade.  
39. Criar uma classe “Pessoa” com método para calcular IMC.  
40. Criar uma classe “Tarefa” com descrição, status e método para marcar como concluída.    

61. Criar uma classe “Livro” com título, autor e método exibir_info() (variante do exemplo 77).  
62. Criar uma classe “ContaBancária” com depósitos e saques (variante do exemplo 78).  
63. Criar uma classe “Produto” com estoque e preço (variante do exemplo 79).  
64. Criar uma classe “Tarefa” com descrição e status (variante do exemplo 80).  
65. Criar uma classe “Biblioteca” que gerencia uma lista de livros.  
66. Criar uma classe “Cliente” com nome, email e método para validar email.  
67. Criar uma classe “Pedido” que armazena produtos e calcula valor total.  
68. Criar uma classe “Estudante” que armazena notas e calcula média final.  
69. Criar uma classe “Veículo” com subclasses “Carro” e “Moto”.  
70. Criar uma classe “Funcionario” que calcula salário com base em horas extras.


81. Criar um sistema simples de cadastro de livros com busca por título.  
82. Criar um sistema bancário com múltiplas contas e histórico de transações.  
83. Criar um gerenciador de estoque com entrada e saída de produtos.  
84. Criar um programa que gera relatórios de vendas mensais a partir de arquivos CSV.  
85. Criar um programa que lê e processa dados JSON para gerar estatísticas.  
86. Criar um chatbot simples que responde perguntas básicas.  
87. Criar um sistema de votação com registro de votos e apuração.  
88. Criar um programa que gera gráficos simples usando matplotlib (se permitido).  
89. Criar um programa que lê um arquivo de log e extrai erros.  
90. Criar um programa que simula uma agenda de compromissos com salvar em arquivo.



40. Classe “Funcionario” com atributos de nome, salário e método para reajuste.
41. Classe “Carro” com métodos de ligar, desligar e acelerar.
42. Classe “Cinema” para gerenciar reservas de assentos.
43. Classe “Playlist” de músicas com métodos de adicionar e remover faixas.
44. Classe “Pedido” para simular compras em uma loja virtual.
45. Classe “NotaFiscal” que calcula o valor total dos produtos.
46. Classe “Pessoa” com método de aniversário para aumentar idade.
47. Classe “Evento” que armazena data, local e participantes.
48. Classe “Contato” para uma agenda, com nome, telefone e e-mail.
62. Implementar um programa que simula uma fila de supermercado.
63. Criar uma agenda de compromissos com datas e horários.
66. Implementar um sistema de inventário para uma loja.


100. **Sistema de controle de estoque.** Crie um programa que gerencia um estoque com produtos, quantidades e preços, permitindo adicionar, remover e consultar.

Classe Carro com atributos (marca, modelo) e método acelerar().

Classe Contato (nome, telefone, e-mail) para uma agenda.

Web scrapping para extrair títulos de notícias de um site.
78. Fazer uma classe “ContaBancária” com depósitos e saques.
79. Criar uma classe “Produto” com estoque e preço.
80. Classe “Tarefa” com descrição e status.
42. Fazer um cronômetro regressivo.

45. Simular uma roleta com premiações aleatórias.

52. Classe `Carro` com velocidade e métodos `acelerar` e `frear`.
53. Classe `Funcionario` com salário e método de aumento.
54. Classe `Musica` com título, artista e duração.
55. Classe `Relógio` com hora, minuto e segundo.
56. Classe `Agenda` com contatos e métodos para adicionar/remover.


61. Sistema de cadastro de usuários (nome, e-mail, idade).
81. Simulador de quiz com pontuação.
90. Simulador de batalha entre personagens com atributos.
31. Criar uma classe “Aluno” com nome, idade e método para exibir dados.  
32. Criar uma classe “Carro” com atributos marca, modelo e método acelerar.  
33. Criar uma classe “ContaCorrente” com limite e saldo, e métodos para saque e depósito.  
34. Criar uma classe “Funcionario” com nome, salário e método para aumento salarial.  
35. Criar uma classe “Círculo” com atributo raio e método para calcular área.  
36. Criar uma classe “Agenda” que armazena contatos (nome e telefone).  
37. Criar uma classe “Pedido” com itens e método para calcular total.  
38. Criar uma classe “Elevador” que controla andar atual e capacidade.  
44. Criar um gerenciador de tarefas com salvar e carregar do arquivo.  

61. Criar uma classe “Livro” com título, autor e método exibir_info() (variante do exemplo 77).  
62. Criar uma classe “ContaBancária” com depósitos e saques (variante do exemplo 78).  
63. Criar uma classe “Produto” com estoque e preço (variante do exemplo 79).  
64. Criar uma classe “Tarefa” com descrição e status (variante do exemplo 80).  
65. Criar uma classe “Biblioteca” que gerencia uma lista de livros.  
66. Criar uma classe “Cliente” com nome, email e método para validar email.  
67. Criar uma classe “Pedido” que armazena produtos e calcula valor total.  
68. Criar uma classe “Estudante” que armazena notas e calcula média final.  
69. Criar uma classe “Veículo” com subclasses “Carro” e “Moto”.  
70. Criar uma classe “Funcionario” que calcula salário com base em horas extras.

31. Criar uma classe “Aluno” com nome, idade e método para exibir dados.  
32. Criar uma classe “Carro” com atributos marca, modelo e método acelerar.  
33. Criar uma classe “ContaCorrente” com limite e saldo, e métodos para saque e depósito.  
34. Criar uma classe “Funcionario” com nome, salário e método para aumento salarial.  
35. Criar uma classe “Círculo” com atributo raio e método para calcular área.  
36. Criar uma classe “Agenda” que armazena contatos (nome e telefone).  
37. Criar uma classe “Pedido” com itens e método para calcular total.  
38. Criar uma classe “Elevador” que controla andar atual e capacidade.  
40. Criar uma classe “Tarefa” com descrição, status e método para marcar como concluída.
61. Criar uma classe “Livro” com título, autor e método exibir_info() (variante do exemplo 77).  
62. Criar uma classe “ContaBancária” com depósitos e saques (variante do exemplo 78).  
63. Criar uma classe “Produto” com estoque e preço (variante do exemplo 79).  
64. Criar uma classe “Tarefa” com descrição e status (variante do exemplo 80).  
65. Criar uma classe “Biblioteca” que gerencia uma lista de livros.  
66. Criar uma classe “Cliente” com nome, email e método para validar email.  
67. Criar uma classe “Pedido” que armazena produtos e calcula valor total.  
68. Criar uma classe “Estudante” que armazena notas e calcula média final.  
69. Criar uma classe “Veículo” com subclasses “Carro” e “Moto”.  
70. Criar uma classe “Funcionario” que calcula salário com base em horas extras.
82. Criar um sistema bancário com múltiplas contas e histórico de transações.  
31. Simular um caixa eletrônico com saques múltiplos de 10, 20, 50 e 100.
38. Implementar um sistema de votação simples.
39. Criar uma classe “Aluno” com métodos para calcular média e situação.
40. Classe “Funcionario” com atributos de nome, salário e método para reajuste.
41. Classe “Carro” com métodos de ligar, desligar e acelerar.
62. Implementar um programa que simula uma fila de supermercado.
66. Implementar um sistema de inventário para uma loja.
82. Implementar um sistema de login com tentativa limitada.
Classe Contato (nome, telefone, e-mail) para uma agenda.
Classe Aluno (matrícula, notas) com método para calcular média.
Classe Relógio que simula um cronômetro (horas, minutos, segundos).
To-do list via linha de comando (adicionar, remover, listar tarefas).
Web scrapping para extrair títulos de notícias de um site.
8. Relógio digital
9. Timer regressivo
11. Aplicativo de lista de compras
13. Encurtador de URL